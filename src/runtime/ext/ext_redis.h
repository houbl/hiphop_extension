/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010- Facebook, Inc. (http://www.facebook.com)         |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXT_REDIS_H__
#define __EXT_REDIS_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/base/base_includes.h>
#include <redis/hiredis.h>
namespace HPHP {
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// class Redis

FORWARD_DECLARE_CLASS_BUILTIN(Redis);
class c_Redis : public ExtObjectData, public Sweepable {
private:
	redisContext *_redisContext;
    redisReply *reply;

 public:
  DECLARE_CLASS(Redis, Redis, ObjectData)

  // need to implement
  public: c_Redis(const ObjectStaticCallbacks *cb = &cw_Redis);
  public: ~c_Redis();
  public: void t___construct();
  DECLARE_METHOD_INVOKE_HELPERS(__construct);
  public: bool t_pconnect(CStrRef host, int port = 0, double timeout = 0.0);
  DECLARE_METHOD_INVOKE_HELPERS(pconnect);
  public: bool t_connect(CStrRef host, int port = 0, double timeout = 0.0);
  DECLARE_METHOD_INVOKE_HELPERS(connect);
  public: bool t_select(int dbindex);
  DECLARE_METHOD_INVOKE_HELPERS(select);
  public: Variant t_get(CStrRef key);
  DECLARE_METHOD_INVOKE_HELPERS(get);
  public: Variant t_mget(CArrRef keys);
  DECLARE_METHOD_INVOKE_HELPERS(mget);
  public: Variant t_close();
  DECLARE_METHOD_INVOKE_HELPERS(close);

  // implemented by HPHP
  public: c_Redis *create();

};

///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXT_REDIS_H__
